language: go

go:
  - 1.15.x
  - tip

os:
  - linux

branches:
  only:
    - main
    - /^v[0-9]+\.[0-9]+\.[0-9]+$/

addons:
  sonarcloud:
    organization: "xmidt-org"
    token:
      secure: "NXo1fbmKCApD5/jtsdf1isEfVoWgG6TYui3C9t5slUdexGYca0arQFWTG2+psQUWjz1/RG0XA3JJtyAnfqI54iPvk9UbHuWSZxaRAP++WXo7Nwnj9ERFkbNkcH4kljrdbNRPMtQ7ywH0lxnijjpJpP8T9am2dGK+tTRYHWbhOqA7Edn3BjoMb3uTqD5akGWYoolQGqItxPnyZ83Codc2Ek23g0qYbGG4TTvXQE1YBOmjFCf8flXtmpH2PMxmh0XOnTox9Cs6w/Xa8u/wODGq8HuzlYIqff8sFYcH3czdT9Ghh1G11oztQBOk9ptMsxomVdvsLcaMpV75mEib4mh28kMOue5tcg6dQ77gv98HaI6wYkZWPxY73iuvTspK1tIUvaufh5ZzYWukT8J9C1D9gZ+fgNq7Ds3lzBnjKFgPdle1lp3a+1AK0LuwRskTbXO5QetmUlk3MAOrZ97IIwmyVeiWm/WrsKNe24e/OnSAAPBUsS5mXJMrWcyd4A3mR8vOA5LxwwFoFfBCK4nDP6EVAu6smuiXu+0Wy4mTWif5FULMZcnFeZojPAuS/vpr27JEFQ2lexNSdR5W82GURl1oNYGgBWPr0pfulQfrYpC/bQS0PfZheQHG/quTLZcuisdvxhTfLdDzT/m9eRRktJ3IgQPQKh5GL8HifsgZefDahkU="

install:
  - GO111MODULE=on go mod vendor

# default stage name is 'test'

script:
  - if [ -n "$(gofmt -s -l . | grep -v "vendor")" ]; then diff -u <(echo -n) <(gofmt -d $(gofmt -s -l . | grep -v "vendor")); fi
  - GO111MODULE=on go test -v -race -coverprofile=coverage.txt ./...
  - GO111MODULE=on go test -race -json ./... > report.json

after_success:
  - sonar-scanner -Dproject.settings=./.sonar-project.properties
  - bash <(curl -s https://codecov.io/bash)

stages:
  - test
  - tag
  - release

jobs:
  include:
    - stage: tag
      name: "Tag For Release"
      if: branch = main && type = push
      before_script:
        - echo -e "machine github.com\n  login $GH_TOKEN" > ~/.netrc
      script:
        - export OLD_VERSION=$(git describe --tags `git rev-list --tags --max-count=1` | tail -1 | sed 's/v\(.*\)/\1/')
        - git config --global user.name "xmidt-bot"
        - git config --global user.email "$BOT_EMAIL"
        - export TAG=$(cat CHANGELOG.md | perl -0777 -ne 'print "$1" if /.*## \[Unreleased\]\s+## \[(v\d+.\d+.\d+)\].*/s')
        - export TODAY=`date +'%m/%d/%Y'`
        - export NOTES=$(cat CHANGELOG.md | perl -0777 -ne 'print "$ENV{TODAY}\n\n$1\n" if /.*## \[$ENV{TAG}\]\s(.*?)\s+## \[(v\d+.\d+.\d+)\].*/s')
        - if [[ "$TAG" != "" && "$TAG" != "$OLD_VERSION" ]]; then git tag -a "$TAG" -m "$NOTES"; git push origin --tags; echo $?; fi
      after_success: skip

    - stage: release
      name: "Make a Release"
      if: branch != main
      script: skip
      deploy:
        on:
          all_branches: true
          tags: true
        provider: releases
        api_key: "$GH_TOKEN"
